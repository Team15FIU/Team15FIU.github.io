{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Harcy\\\\Documents\\\\Programming\\\\React\\\\Team15FIU.github.io\\\\bookbook\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const createProject = project => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore(); //Adds to db the desired collection\n\n    firestore.collection('Books').add(_objectSpread({}, project)).then(() => {\n      dispatch({\n        type: 'CREATE_PROJECT_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR'\n      }, err);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Harcy/Documents/Programming/React/Team15FIU.github.io/bookbook/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirestore","firestore","collection","add","then","type","catch","err"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAIC,OAAD,IAAa;AACxC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC7C;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B,CAF6C,CAG7C;;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,mBACKN,OADL,GAEGO,IAFH,CAEQ,MAAM;AACZN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAJD,EAIGC,KAJH,CAISC,GAAG,IAAI;AACdT,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAAD,EAAmCE,GAAnC,CAAR;AACD,KAND;AAOD,GAXD;AAYD,CAbM","sourcesContent":["export const createProject = (project) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    //Adds to db the desired collection\r\n    firestore.collection('Books').add({\r\n      ...project,\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}